name: Verify Published Packages

on:
  workflow_run:
    workflows: ["Release Packages"]
    types:
      - completed

jobs:
  verify-latest:
    name: Verify latest packages against fixtures
    runs-on: ubuntu-latest
    if: >-
      ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Read published versions
        id: read_versions
        run: |
          set -euo pipefail
          node <<'NODE' >> "$GITHUB_OUTPUT"
          const core = require('./packages/core/package.json').version;
          const alert = require('./packages/alert/package.json').version;
          console.log(`core_version=${core}`);
          console.log(`alert_version=${alert}`);
          NODE

      - name: Wait until versions are visible on npm
        run: |
          set -euxo pipefail
          for PKG in "remark-itinerary@${{ steps.read_versions.outputs.core_version }}" "remark-itinerary-alert@${{ steps.read_versions.outputs.alert_version }}"; do
            for i in {1..10}; do
              if npm view "$PKG" version >/dev/null 2>&1; then
                echo "Found $PKG on npm"
                break
              fi
              echo "Waiting for $PKG to be visible..."; sleep 3
              if [ "$i" = "10" ]; then echo "Timeout waiting for $PKG"; exit 1; fi
            done
          done

      - name: Prepare clean workspace
        run: |
          set -euxo pipefail
          WORK=/tmp/itmd-verify
          rm -rf "$WORK"
          mkdir -p "$WORK"
          mkdir -p "$WORK/fixtures"
          cp -r .github/workflows/verify "$WORK"/fixtures
          cd "$WORK/fixtures"
          npm init -y >/dev/null 2>&1

      - name: Install latest packages from npm
        working-directory: /tmp/itmd-verify/fixtures
        run: |
          npm i --no-audit --no-fund unified remark-parse unist-util-visit \
            remark-itinerary@"${{ steps.read_versions.outputs.core_version }}" remark-itinerary-alert@"${{ steps.read_versions.outputs.alert_version }}"

      - name: Run verification
        working-directory: /tmp/itmd-verify/fixtures/verify
        run: |
          node verify.mjs

